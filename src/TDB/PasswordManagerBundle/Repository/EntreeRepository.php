<?php

namespace TDB\PasswordManagerBundle\Repository;

/**
 * EntreesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EntreeRepository extends \Doctrine\ORM\EntityRepository
{
	// Fonction qui récupère toute les entrées avec leurs services et accès associés.
	public function entreeAll(){

		$qb = $this->createQueryBuilder('entree');

		$qb 
			->leftJoin('entree.services', 's')
			->leftJoin('s.access', 'acc')
			->addSelect('s')
			->addSelect('acc')
			->orderBy('entree.entreeNom', 'ASC');
			
		return $qb->getQuery()->getResult();

	}
	// Fonction qui cherche une entrée par son id et retourne ses services et accès associés.
	public function findEntreeById($id){

		$qb = $this->createQueryBuilder('entree');

		$qb
			->leftJoin('entree.services', 's')
			->leftJoin('s.access', 'acc')
			->addSelect('s')
			->addSelect('acc')
			->where('entree.id = :id')
			->setParameter('id', $id)
		;

		return $qb
			->getQuery()
			->getSingleResult()
		;			
	}
	// fonction qui recherche dans le nom des entrées, services et accès associés une chaîne de caractère.
	public function recherche($data){

		$qb = $this->createQueryBuilder('entree');

		$qb
			->leftJoin('entree.services', 's')
			->leftJoin('s.access', 'acc')
			->addSelect('s')
			->addSelect('acc')
			->where('entree.entreeNom = :data')
			->orwhere('s.serviceNom = :data')
			->orwhere('acc.clef = :data')
			->orwhere('acc.valeur = :data')
			->setParameter('data', $data)
			->orderBy('entree.entreeNom', 'ASC');
		;
		return $qb
			->getQuery()
			->getResult()
		;					
	}
	// fonction qui recherche une chaîne de caractère dans les services associés à l'entrée.
	public function searchService($data){
		
		$qb = $this->createQueryBuilder('a');

		$qb
			->leftJoin('a.services', 's')
			->addSelect('s')
			->orwhere('s.serviceNom = :data')
			->orwhere('acc.clef = :data')
			->orwhere('acc.valeur = :data')
			->setParameter('data', $data)
			->orderBy('a.entreeNom', 'ASC');
		;
		return $qb
			->getQuery()
			->getResult()
		;					
	}
}
